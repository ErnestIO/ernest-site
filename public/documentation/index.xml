<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentations on ernest.r3labs.io</title>
    <link>/documentation/</link>
    <description>Recent content in Documentations on ernest.r3labs.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-EN</language>
    <managingEditor>jason.reid@r3labs.io (Jason Reid)</managingEditor>
    <webMaster>jason.reid@r3labs.io (Jason Reid)</webMaster>
    <copyright>(c) 2016 R3 Labs</copyright>
    <lastBuildDate>Tue, 17 May 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/documentation/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>CLI Commands</title>
      <link>/documentation/cli-cmd/</link>
      <pubDate>Tue, 17 May 2016 00:00:00 +0000</pubDate>
      <author>jason.reid@r3labs.io (Jason Reid)</author>
      <guid>/documentation/cli-cmd/</guid>
      <description>

&lt;h1 id=&#34;ernest-cli-commands&#34;&gt;Ernest CLI Commands&lt;/h1&gt;

&lt;h2 id=&#34;target&#34;&gt;Target&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;NAME:
   ernest target - Configure Ernest target instance.

USAGE:
   ernest target &amp;lt;ernest_url&amp;gt;

DESCRIPTION:
   Sets up ernest instance target.

   Example:
    $ ernest target https://myernest.com
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;info&#34;&gt;Info&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;NAME:
   ernest info - Display system-wide information.

USAGE:
   ernest info

DESCRIPTION:
   Displays ernest instance information.

   Example:
    $ ernest info
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;login&#34;&gt;Login&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;NAME:
   ernest login - Login with your Ernest credentials.

USAGE:
   ernest login [command options]  

DESCRIPTION:
   Logs an user into Ernest instance.

   Example:
    $ ernest login

   It can also be used without asking the username and password.

   Example:
    $ ernest login --user &amp;lt;user&amp;gt; --password &amp;lt;password&amp;gt;
  

OPTIONS:
   --user   User credentials
   --password   Password credentials
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;logout&#34;&gt;Logout&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;NAME:
   ernest logout - Clear local authentication credentials.

USAGE:
   ernest logout  

DESCRIPTION:
   Logs out an user from Ernest instance.

   Example:
    $ ernest logout
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;user&#34;&gt;User&lt;/h2&gt;

&lt;h3 id=&#34;list&#34;&gt;List&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;NAME:
   ernest user list - List available users.

USAGE:
   ernest user list  

DESCRIPTION:
   List available users.

   Example:
    $ ernest user list
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create&#34;&gt;Create&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;NAME:
   ernest user create - Create a new user.

USAGE:
   ernest user create [command options] &amp;lt;username&amp;gt; &amp;lt;password&amp;gt;

DESCRIPTION:
   Create a new user on the targeted instance of Ernest.

   Example:
    $ ernest user create --user &amp;lt;adminuser&amp;gt; --password &amp;lt;adminpassword&amp;gt; &amp;lt;username&amp;gt; &amp;lt;password&amp;gt;

   You can also add an email to the user with the flag --email

   Example:
    $ ernest user create --user &amp;lt;adminuser&amp;gt; --password &amp;lt;adminpassword&amp;gt; --email username@example.com &amp;lt;username&amp;gt; &amp;lt;password&amp;gt;
  

OPTIONS:
   --user   Admin user credentials
   --password   Admin password credentials
   --email  Email for the user
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;password&#34;&gt;Password&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;NAME:
   ernest user password - Change password of available users.

USAGE:
   ernest user password [command options] &amp;lt;user-id&amp;gt;

DESCRIPTION:
   Change password of available users.

   Example:
    $ ernest user password &amp;lt;user-id&amp;gt;

    or changing a password by being admin:

    $ ernest user password --user &amp;lt;adminuser&amp;gt; --password &amp;lt;adminpassword&amp;gt; &amp;lt;user-id&amp;gt;
  

OPTIONS:
   --user   Admin user credentials
   --password   Admin password credentials
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;disable&#34;&gt;Disable&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;NAME:
   ernest user disable - Disable available users.

USAGE:
   ernest user disable [command options] &amp;lt;username&amp;gt;

DESCRIPTION:
   Disable available users.

  Example:
   $ ernest user disable --user &amp;lt;adminuser&amp;gt; --password &amp;lt;adminpassword&amp;gt; &amp;lt;user-id&amp;gt;
 

OPTIONS:
   --user   Admin user credentials
   --password   Admin password credentials
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;group&#34;&gt;Group&lt;/h2&gt;

&lt;h3 id=&#34;list-1&#34;&gt;List&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;NAME:
   ernest group list - List available groups.

USAGE:
   ernest group list  

DESCRIPTION:
   List available groups.

   Example:
    $ ernest group list
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;datacenter&#34;&gt;Datacenter&lt;/h2&gt;

&lt;h3 id=&#34;list-2&#34;&gt;List&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;NAME:
   ernest datacenter list - List available datacenters.

USAGE:
   ernest datacenter list  

DESCRIPTION:
   List available datacenters.

   Example:
    $ ernest datacenter list
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-1&#34;&gt;Create&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;NAME:
   ernest datacenter create - Create a new datacenter.

USAGE:
   ernest datacenter create [command options] &amp;lt;datacenter-name&amp;gt; &amp;lt;vcloud-url&amp;gt; &amp;lt;network-name&amp;gt;

DESCRIPTION:
   Create a new datacenter on the targeted instance of Ernest.

   Example:
    $ ernest datacenter create --datacenter-user username --datacenter-password xxxx --datacenter-org MY-ORG-NAME --vse-url http://vse.url mydatacenter https://myernest.com MY-PUBLIC-NETWORK
  

OPTIONS:
   --datacenter-user    User to be configured with the datacenter
   --datacenter-password  Password related with user
   --datacenter-org     vCloud Organization name
   --vse-url      VSE URL
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;service&#34;&gt;Service&lt;/h2&gt;

&lt;h3 id=&#34;list-3&#34;&gt;List&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;NAME:
   ernest service list - List available services.

USAGE:
   ernest service list  

DESCRIPTION:
   List available services and shows its most relevant information.

   Example:
    $ ernest service list
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;apply&#34;&gt;Apply&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;NAME:
   ernest service apply - Builds or changes infrastructure.

USAGE:
   ernest service apply &amp;lt;file.yml&amp;gt;

DESCRIPTION:
   Sends a service YAML description file to Ernest to be executed.
   You must be logged in to execute this command.

   If the file is not provided, ernest.yml will be used by default.

   Example:
    $ ernest apply myservice.yml
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;destroy&#34;&gt;Destroy&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;NAME:
   ernest service destroy - Destroy a service.

USAGE:
   ernest service destroy [command options] &amp;lt;service_name&amp;gt;

DESCRIPTION:
   Destroys a service by its name.

   Example:
    $ ernest destroy myservice
  

OPTIONS:
   --yes, -y  Force destroy command without asking for permission.
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;history&#34;&gt;History&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;NAME:
   ernest service history - Shows the history of a service, a list of builds

USAGE:
   ernest service history &amp;lt;service_name&amp;gt;

DESCRIPTION:
   Shows the history of a service, a list of builds and its status and basic information.

   Example:
    $ ernest history myservice
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;reset&#34;&gt;Reset&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;NAME:
   ernest service reset - Reset an in progress service.

USAGE:
   ernest service reset &amp;lt;service_name&amp;gt;

DESCRIPTION:
   Reseting a service creation may cause problems, please make sure you know what are you doing.

   Example:
    $ ernest reset myservice
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;definition&#34;&gt;Definition&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;NAME:
   ernest service definition - Show the current definition of a service by its name

USAGE:
   ernest service definition [command options] &amp;lt;service_name&amp;gt;

DESCRIPTION:
   Show the current definition of a service by its name getting the definition about the build.

   Example:
    $ ernest service definition myservice
  

OPTIONS:
   --build  Build ID
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;monitor&#34;&gt;Monitor&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;NAME:
   ernest service monitor - Monitor a service.

USAGE:
   ernest service monitor &amp;lt;service_id&amp;gt;

DESCRIPTION:
   Monitors a service while it is being built by its service id.

   Example:
    $ ernest monitor F94034CE-1A57-4A66-AF49-E1E99C5010A2
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>/documentation/start/</link>
      <pubDate>Tue, 17 May 2016 00:00:00 +0000</pubDate>
      <author>jason.reid@r3labs.io (Jason Reid)</author>
      <guid>/documentation/start/</guid>
      <description>

&lt;h1 id=&#34;getting-started-with-ernest&#34;&gt;Getting Started With Ernest&lt;/h1&gt;

&lt;p&gt;We will assume you have a working instance of Ernest. If not you can get Ernest from &lt;a href=&#34;/download&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;install-ernest-cli&#34;&gt;Install Ernest CLI&lt;/h2&gt;

&lt;p&gt;Ernest CLI is distributed as a binary package for all supported platforms and architectures. This page will not cover how to compile Ernest CLI from source.&lt;/p&gt;

&lt;h3 id=&#34;installation&#34;&gt;Installation&lt;/h3&gt;

&lt;p&gt;To install Ernest CLI, find the &lt;a href=&#34;http://artefact.r3labs.io/ernest/&#34;&gt;appropriate package&lt;/a&gt; for your system and download it. Ernest CLI is packaged as an executable.&lt;/p&gt;

&lt;p&gt;After downloading Ernest CLI, move it to a directory that is on the PATH. See &lt;a href=&#34;http://stackoverflow.com/questions/14637979/how-to-permanently-set-path-on-linux&#34;&gt;this page&lt;/a&gt; for instructions on setting the PATH on Linux and Mac. &lt;a href=&#34;http://stackoverflow.com/questions/1618280/where-can-i-set-path-to-make-exe-on-windows&#34;&gt;This page&lt;/a&gt; contains instructions for setting the PATH on Windows.&lt;/p&gt;

&lt;h3 id=&#34;verification&#34;&gt;Verification&lt;/h3&gt;

&lt;p&gt;After installing Ernest CLI, verify the installation worked by opening a new terminal session and checking that ernest is available. By executing ernest you should see help output similar to that below:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ernest
NAME:
   ernest - Command line interface for Ernest

USAGE:
   ernest [global options] command [command options] [arguments...]
   
VERSION:
   0.14
   
COMMANDS:
    target  Configure Ernest target instance.
    info  Display system-wide information.
    login Login with your Ernest credentials.
    logout  Clear local authentication credentials.
    user  User related subcommands
    group Group related subcommands
    datacenter  Datacenter related subcommands
    service Service related subcommands

GLOBAL OPTIONS:
   --help, -h   show help
   --version, -v  print the version

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you get an error that ernest could not be found, then your PATH environment variable was not setup properly. Please go back and ensure that your PATH variable contains the directory where Ernest CLI was installed.&lt;/p&gt;

&lt;p&gt;Otherwise, Ernest CLI is installed and ready to go.&lt;/p&gt;

&lt;h3 id=&#34;next-step&#34;&gt;Next Step&lt;/h3&gt;

&lt;p&gt;Now lets build some infrastructure.&lt;/p&gt;

&lt;h2 id=&#34;build-infrastructure&#34;&gt;Build Infrastructure&lt;/h2&gt;

&lt;p&gt;With Ernest CLI installed, let&amp;rsquo;s dive right into it and start creating some infrastructure. We&amp;rsquo;ll build infrastructure on Carrenza vCloud for this guide.&lt;/p&gt;

&lt;h3 id=&#34;setup-ernest&#34;&gt;Setup Ernest&lt;/h3&gt;

&lt;p&gt;Before we can create any infrastructure we will need to connect to Ernest and configure it to work with our infrastructure provider. We will need the following information about our Ernest instance and infrastructure provider:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ernest IP address (31.210.241.238)&lt;/li&gt;
&lt;li&gt;Ernest username/password (user1/xxxxxx)&lt;/li&gt;
&lt;li&gt;vCloud URL (myvdc.carrenza.net)&lt;/li&gt;
&lt;li&gt;vCloud organisation (r3labs-development)&lt;/li&gt;
&lt;li&gt;vCloud datacenter (r3-jreid2)&lt;/li&gt;
&lt;li&gt;vCloud network (DVS-VCD-EXT-665)&lt;/li&gt;
&lt;li&gt;vCloud username/password (jreid/xxxxxx)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The values in brackets are what we will use for this guide. The Carrenza servicedesk can provide you with information for your own usage.&lt;/p&gt;

&lt;p&gt;The first step is to set the IP address of Ernest:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ernest target https://31.210.241.221
Target set

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next we login to Ernest:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ernest login
Username: user1
Password: ******
Log in succesful.

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once we have logged in to Ernest we can setup the vCloud datacenter and credentials that Ernest will use to create our infrastructure:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ernest datacenter create --datacenter-user jreid --datacenter-password xxxxxx --datacenter-org r3labs-development r3-jreid2 https://myvdc.carrenza.net DVS-VCD-EXT-665
SUCCESS: Datacenter r3-jreid2 created

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;define-infrastructure&#34;&gt;Define Infrastructure&lt;/h3&gt;

&lt;p&gt;Now that we have Ernest setup we need to define the infrastructure we want to build. With Ernest infrastructure is defined in the YAML format. The YAML for our example is:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
name: demo1
datacenter: r3-jreid2
bootstrapping: none
service_ip: 195.3.186.42

routers: 
  - name: test1
    rules:
    - name: in_out_any
      source: internal
      from_port: any
      destination: external
      to_port: any
      protocol: any
      action: allow

    - name: out_in_22
      source: any
      from_port: any
      destination: internal
      to_port: &#39;22&#39;
      protocol: tcp
      action: allow

    networks:
      - name: web
        subnet: 10.1.0.0/24

    port_forwarding:
      - source: 195.3.186.42
        from_port: &#39;22&#39;
        to_port: &#39;22&#39;
        destination: 10.1.0.11

instances:
  - name: web
    image: r3/ubuntu-1404
    cpus: 1
    memory: 1GB
    count: 1
    networks:
      name: web
      start_ip: 10.1.0.11

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-infrastructure&#34;&gt;Create Infrastructure&lt;/h3&gt;

&lt;p&gt;Now that we have defined our infrastructure we are ready to apply our definition:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ernest service apply demo1.yml
Environment creation requested
Ernest will show you all output from your requested service creation
You can cancel at any moment with Ctrl+C, even the service is still being created, you won&#39;t have any output
Starting environment creation
Creating routers:
  195.3.186.42
Routers successfully created
Creating networks:
  - 10.1.0.0/24
Networks successfully created
Creating instances:
   - r3-jreid2-demo1-web-1
Instances successfully created
Updating instances:
   - r3-jreid2-demo1-web-1
Instances successfully updated
Setting up firewalls:
Firewalls Created
Configuring nats
Nats Created
SUCCESS: rules successfully applied
Your environment endpoint is: 195.3.186.42

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Congratulations! You have built your first infrastructure with Ernest. You can now SSH to the server on IP 195.3.186.42 to install and configure your software.&lt;/p&gt;

&lt;p&gt;If you wish to change the infrastructure update your YAML to show how you want the infrastructure to look, then re-apply the YAML. Ernest will make the appropriate changes to the infrastructure.&lt;/p&gt;

&lt;p&gt;For example if we increase the &amp;lsquo;web&amp;rsquo; instance count from 1 to 2 and re-apply the YAML a new server is created:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ernest service apply demo1.yml 
Environment creation requested
Ernest will show you all output from your requested service creation
You can cancel at any moment with Ctrl+C, even the service is still being created, you won&#39;t have any output
Starting environment creation
Creating instances:
   - r3-jreid2-demo1-web-2
Instances successfully created
Updating instances:
   - r3-jreid2-demo1-web-2
Instances successfully updated
SUCCESS: rules successfully applied
Your environment endpoint is: 195.3.186.42

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can list the services we created:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ernest service list
NAME  UPDATED       STATUS  ENDPOINT
demo1 2016-05-29 14:52:13 +0100 BST done  195.3.186.42

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For a given service we can see the history:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ernest service history demo1
NAME  BUILD ID                UPDATED       STATUS
demo1 488249c2-63c2-484e-b6e0-c690ba859dab-8c22343f8f9d3dfb68e41cc033e7b492 2016-05-29 14:52:13 +0100 BST done
demo1 6799e858-0484-42cb-bbb1-c1bc5f61e500-8c22343f8f9d3dfb68e41cc033e7b492 2016-05-29 14:39:56 +0100 BST done

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For a given service and build ID we can see the definition we applied:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ernest service definition demo1 --build 488249c2-63c2-484e-b6e0-c690ba859dab-8c22343f8f9d3dfb68e41cc033e7b492
---
name: demo1
datacenter: r3-jreid2
bootstrapping: none
service_ip: 195.3.186.42

routers: 
  - name: test1
    rules:
    - name: in_out_any
      source: internal
      from_port: any
      destination: external
      to_port: any
      protocol: any
      action: allow

    - name: out_in_22
      source: any
      from_port: any
      destination: internal
      to_port: &#39;22&#39;
      protocol: tcp
      action: allow

    networks:
      - name: web
        subnet: 10.1.0.0/24

    port_forwarding:
      - source: 195.3.186.42
        from_port: &#39;22&#39;
        to_port: &#39;22&#39;
        destination: 10.1.0.11

instances:
  - name: web
    image: r3/ubuntu-1404
    cpus: 1
    memory: 1GB
    count: 2
    networks:
      name: web
      start_ip: 10.1.0.11

&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;destroy-infrastructure&#34;&gt;Destroy Infrastructure&lt;/h3&gt;

&lt;p&gt;We can also delete anything we build:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ernest service destroy demo1
Are you sure? Please type yes or no and then press enter: yes
Instances deleted
Deleting networks:
  - 10.1.0.0/24
Networks deleted
Deleting router:
Routers deleted
SUCCESS: your environment has been successfully deleted
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;next-step-1&#34;&gt;Next Step&lt;/h3&gt;

&lt;p&gt;Now that we have created some infrastructure, lets look at how Ernest can be used to install and configure your software for you.&lt;/p&gt;

&lt;h2 id=&#34;build-platform&#34;&gt;Build Platform&lt;/h2&gt;

&lt;p&gt;In the above example the task of installing and configuring software was left to the user to do. In this example we will bootstrap the servers and install our software directly from the YAML.&lt;/p&gt;

&lt;h3 id=&#34;define-platform&#34;&gt;Define Platform&lt;/h3&gt;

&lt;p&gt;We will use SALT as our bootstrap provisioner, and add a provisioner section to the instance that will install the Apache HTTP Server. The new YAML is shown here:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;---
name: demo2
datacenter: r3-jreid2
bootstrapping: salt
service_ip: 195.3.186.44
ernest_ip:
  - 31.210.241.221
  - 31.210.240.161

routers: 
  - name: test2
    rules:
    - name: in_out_any
      source: internal
      from_port: any
      destination: external
      to_port: any
      protocol: any
      action: allow

    - name: out_in_80
      source: any
      from_port: any
      destination: internal
      to_port: &#39;80&#39;
      protocol: tcp
      action: allow

    networks:
      - name: web
        subnet: 10.1.0.0/24

    port_forwarding:
      - source: 195.3.186.44
        from_port: &#39;80&#39;
        to_port: &#39;80&#39;
        destination: 10.1.0.11

instances:
  - name: web
    image: r3/ubuntu-1404
    cpus: 1
    memory: 1GB
    count: 1
    networks:
      name: web
      start_ip: 10.1.0.11
    provisioner:
      - exec:
        - &#39;sudo apt-get update&#39;
        - &#39;sudo apt-get install apache2 -y&#39;

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The first thing to notice is that we have changed &amp;lsquo;bootstrapping&amp;rsquo; from &amp;lsquo;none&amp;rsquo; to &amp;lsquo;salt&amp;rsquo;. This will result in Ernest deploying a SALT instance that we can use to manage our environment. Note that the &amp;lsquo;bootstrapping&amp;rsquo; option must be specified when an environment is created and cannot be changed for that environment.&lt;/p&gt;

&lt;p&gt;The next thing we have changed are the firewall and port-forwarding configuration. We have removed the sections needed for SSH access to the server since we are now able to run commands directly from the YAML.&lt;/p&gt;

&lt;p&gt;Finally, we have added a provisioner section to the instance that will install the Apache HTTP Server.&lt;/p&gt;

&lt;h3 id=&#34;create-platform&#34;&gt;Create Platform&lt;/h3&gt;

&lt;p&gt;Now that we have defined our platform we are ready to create it:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ernest service apply demo2.yml
Environment creation requested
Ernest will show you all output from your requested service creation
You can cancel at any moment with Ctrl+C, even the service is still being created, you won&#39;t have any output
Starting environment creation
Creating routers:
  195.3.186.44
Routers successfully created
Creating networks:
  - 10.254.254.0/24
  - 10.1.0.0/24
Networks successfully created
Creating instances:
   - r3-jreid2-demo2-salt-master
   - r3-jreid2-demo2-web-1
Instances successfully created
Updating instances:
   - r3-jreid2-demo2-salt-master
   - r3-jreid2-demo2-web-1
Instances successfully updated
Setting up firewalls:
Firewalls Created
Configuring nats
Nats Created
Bootstrapping
Instances bootstrapped
Running executions
Executions ran
SUCCESS: rules successfully applied
Your environment endpoint is: 195.3.186.44

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice that Ernest has automatically created a SALT instance for us on network 10.254.254.0/24. It has also trigged the bootstrapping process that installs the SALT minion on each of our servers, and then run the commands we specified in the provisioner section of each instance defined in the YAML.&lt;/p&gt;

&lt;p&gt;You should be able to browse to &lt;a href=&#34;http://195.3.186.44&#34;&gt;http://195.3.186.44&lt;/a&gt;. Congratulations!&lt;/p&gt;

&lt;p&gt;If you wish to change the platform update your YAML to show how you want the platform to look, then re-apply the YAML. Ernest will make the appropriate changes to the platform.&lt;/p&gt;

&lt;h2 id=&#34;next-steps&#34;&gt;Next Steps&lt;/h2&gt;

&lt;p&gt;That concludes the Getting Started With Ernest CLI guide. Hopefully you&amp;rsquo;re now able to not only see what Ernest is useful for, but you&amp;rsquo;re also able to put this knowledge to use to improve building your own infrastructure and platforms.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ve covered the basics for all of these features in this guide.&lt;/p&gt;

&lt;p&gt;As a next step, the following resources are available:&lt;/p&gt;

&lt;p&gt;Documentation &lt;em&gt;&lt;strong&gt;[where is this?]&lt;/strong&gt;&lt;/em&gt; - The documentation is an in-depth reference guide to all the features of Ernest, including technical details about the internals of how Ernest operates.&lt;/p&gt;

&lt;p&gt;Examples &lt;em&gt;&lt;strong&gt;[where is this?]&lt;/strong&gt;&lt;/em&gt; - The examples have more full featured configuration files, showing some of the possibilities with Ernest.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>/documentation/</link>
      <pubDate>Tue, 17 May 2016 00:00:00 +0000</pubDate>
      <author>jason.reid@r3labs.io (Jason Reid)</author>
      <guid>/documentation/</guid>
      <description>

&lt;h1 id=&#34;introduction-to-ernest&#34;&gt;Introduction to Ernest&lt;/h1&gt;

&lt;p&gt;Welcome to the intro guide to Ernest! This guide is the best place to start with Ernest. We cover what Ernest is, what problems it can solve, how it compares to existing software, and contains a quick start for using Ernest.&lt;/p&gt;

&lt;p&gt;If you are already familiar with the basics of Ernest, the documentation provides a better reference guide for all available features as well as internals.&lt;/p&gt;

&lt;h2 id=&#34;what-is-ernest&#34;&gt;What is Ernest?&lt;/h2&gt;

&lt;p&gt;Ernest is an application and infrastructure orchestration and automation engine. Ernest takes the complexity and people out of DevOps, simplifying the process of creating and managing even the most complex environments.&lt;/p&gt;

&lt;p&gt;By delivering everything a development team requires to be able to deploy code and manage its lifecycle Ernest de-risks and accelerates the application development/deployment process, helping developers to deliver value back to the business faster and providing increased business agility&lt;/p&gt;

&lt;p&gt;Ernest has been engineered for flexibility, allowing you to design your environment the way you want. You pick the technologies, the cloud and the architecture then overlay your compliance and governance requirements.&lt;/p&gt;

&lt;p&gt;The Cloud is about freedom of choice and mobility. With Ernest you can easily deploy your environment onto the cloud or infrastructure of your choice and the redeploy it to an alternative cloud as business requirements demand.&lt;/p&gt;

&lt;p&gt;Because Ernest is about developing and then using software reliably and reproducibly it ensures consistency and agility throughout the application lifecycle. Ernest brings the same version control, testing and configuration management tooling you use elsewhere in your development process to your platform; allowing you to utilise version controlled, tested, automated deployments of your environment from the development stage, through testing, to production.&lt;/p&gt;

&lt;p&gt;Ernest key features include;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A Continuous Delivery pipeline for Infrastructure as Code&lt;/li&gt;
&lt;li&gt;An orchestration tool for any configuration manager and any cloud&lt;/li&gt;
&lt;li&gt;Fully version controlled&lt;/li&gt;
&lt;li&gt;Fully automated&lt;/li&gt;
&lt;li&gt;Works with any technology stack&lt;/li&gt;
&lt;li&gt;Able to manage the full application life cycle&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ernest is built around the idea that DevOps is not a job title, but a methodology, one which Ernest has enshrined in code. Ernest enables digital and SaaS transformation, while removing the complexity of DevOps by delivering it as-a-Service.&lt;/p&gt;

&lt;h2 id=&#34;next-steps&#34;&gt;Next Steps&lt;/h2&gt;

&lt;p&gt;See the page on &lt;a href=&#34;Ernest use cases&#34;&gt;Ernest use cases&lt;/a&gt; to see the multiple ways Ernest can be used. Then see &lt;a href=&#34;Ernest-compare-competence&#34;&gt;how Ernest compares to other software&lt;/a&gt; to see how it fits into your existing infrastructure.&lt;/p&gt;

&lt;p&gt;Finally, continue onwards with the &lt;a href=&#34;Getting Started With Ernest CLI&#34;&gt;getting started&lt;/a&gt; guide to use Ernest and see how it works in practice.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>YAML Structure</title>
      <link>/documentation/yaml/</link>
      <pubDate>Tue, 17 May 2016 00:00:00 +0000</pubDate>
      <author>jason.reid@r3labs.io (Jason Reid)</author>
      <guid>/documentation/yaml/</guid>
      <description>

&lt;h1 id=&#34;ernest-yaml-structure&#34;&gt;Ernest YAML Structure&lt;/h1&gt;

&lt;p&gt;Environments built and managed with Ernest are defined in YAML format.&lt;/p&gt;

&lt;h2 id=&#34;example&#34;&gt;Example&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;---
name: demo
datacenter: r3-jreid2
bootstrapping: salt
service_ip: 195.3.186.44
ernest_ip:
  - 31.210.240.161

routers: 
  - name: demo
    rules:
    - name: in_out_any
      source: internal
      from_port: any
      destination: external
      to_port: any
      protocol: any
      action: allow

    - name: out_in_80
      source: any
      from_port: any
      destination: internal
      to_port: &#39;80&#39;
      protocol: tcp
      action: allow

    networks:
      - name: web
        subnet: 10.1.0.0/24

    port_forwarding:
      - source: 195.3.186.44
        from_port: &#39;80&#39;
        to_port: &#39;80&#39;
        destination: 10.1.0.11

instances:
  - name: web
    image: r3/ubuntu-1404
    cpus: 1
    memory: 1GB
    count: 1
    networks:
      name: web
      start_ip: 10.1.0.11
    provisioner:
      - exec:
        - &#39;sudo apt-get update&#39;
        - &#39;sudo apt-get install apache2 -y&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;field-reference&#34;&gt;Field Reference&lt;/h2&gt;

&lt;h3 id=&#34;service-options&#34;&gt;Service Options&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;name: demo
datacenter: r3-jreid2
bootstrapping: salt
service_ip: 195.3.186.44
ernest_ip:
  - 31.210.240.161
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Service Options support the following fields:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;name&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;String that defines the name of the service to build.&lt;/li&gt;
&lt;li&gt;This field is mandatory.&lt;/li&gt;
&lt;li&gt;This field cannot be null or empty.&lt;/li&gt;
&lt;li&gt;The value of this field must be 50 characters maximum.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;datacenter&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;String that defines the name of the datacenter where the service is built.&lt;/li&gt;
&lt;li&gt;This field is mandatory.&lt;/li&gt;
&lt;li&gt;This field cannot be null or empty.&lt;/li&gt;
&lt;li&gt;The value of this field must 50 characters maximum.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;bootstrapping&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;String [salt, none] that defines if you’re going to be able to execute commands on the servers&lt;/li&gt;
&lt;li&gt;This field is optional.&lt;/li&gt;
&lt;li&gt;This field defaults to none.&lt;/li&gt;
&lt;li&gt;The value of this is restricted to “salt” or “none”&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;service_ip&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;String that defines the public ip of the router already created on vcloud&lt;/li&gt;
&lt;li&gt;This field is optional&lt;/li&gt;
&lt;li&gt;This field defaults to none.&lt;/li&gt;
&lt;li&gt;The value of this field is an IP, internally defined as &lt;a href=&#34;https://golang.org/pkg/net/#IP&#34;&gt;https://golang.org/pkg/net/#IP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;ernest_ip&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Array of IPs that defines the ernest instance public ip, so it will be allowed through the created service firewall rules.&lt;/li&gt;
&lt;li&gt;The value of this field is an IP, internally defined as &lt;a href=&#34;https://golang.org/pkg/net/#IP&#34;&gt;https://golang.org/pkg/net/#IP&lt;/a&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;This field is mandatory only if you’ve defined bootstrapping as “salt”&lt;/li&gt;
&lt;li&gt;This field defaults to an empty array.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;networking&#34;&gt;Networking&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;routers: 
  - name: demo
    rules:
    - name: in_out_any
      source: internal
      from_port: any
      destination: external
      to_port: any
      protocol: any
      action: allow

    - name: out_in_80
      source: any
      from_port: any
      destination: internal
      to_port: &#39;80&#39;
      protocol: tcp
      action: allow

    networks:
      - name: web
        subnet: 10.1.0.0/24

    port_forwarding:
      - source: 195.3.186.44
        from_port: &#39;80&#39;
        to_port: &#39;80&#39;
        destination: 10.1.0.11
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Networking supports the following fields:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;name&lt;/strong&gt;

&lt;ul&gt;
&lt;li&gt;String that defines the name of the service to build.&lt;/li&gt;
&lt;li&gt;This field is mandatory.&lt;/li&gt;
&lt;li&gt;This field cannot be null or empty.&lt;/li&gt;
&lt;li&gt;This field must be unique by user &amp;amp; manifest.&lt;/li&gt;
&lt;li&gt;The value of this field can be 50 characters maximum.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;rules&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A firewall rule controls traffic that is allowed to flow between both internal and external routers and networks.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;name&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;String that defines the name of the rule.&lt;/li&gt;
&lt;li&gt;This field is mandatory.&lt;/li&gt;
&lt;li&gt;This field can’t be null or empty.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;source&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;String the source of the network where this firewall acts&lt;/li&gt;
&lt;li&gt;This field is mandatory.&lt;/li&gt;
&lt;li&gt;Values can be: external | internal | any | named networks | CIDR&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;from_port&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Source port numbers&lt;/li&gt;
&lt;li&gt;This field is mandatory.&lt;/li&gt;
&lt;li&gt;Values can be:  an string ( valid port number, 1 - 65535 ) or any&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;destination&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;String the destination of the network where this firewall acts&lt;/li&gt;
&lt;li&gt;This field is mandatory.&lt;/li&gt;
&lt;li&gt;Values can be:  external | internal | any | named networks | CIDR&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;to_port&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Destination port numbers&lt;/li&gt;
&lt;li&gt;This field is mandatory.&lt;/li&gt;
&lt;li&gt;Values can be:  an string ( valid port number, 1 - 65535 ) or any&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;protocol&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;String with the protocol we are firewalling&lt;/li&gt;
&lt;li&gt;This field is mandatory.&lt;/li&gt;
&lt;li&gt;Values can be: tcp | udp | icmp | any | tcp &amp;amp; udp&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;networks&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A network is a virtual network that attaches to a router (in vcloud, other providers will differ). This is what allows us to network/isolate VM’s together.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;name&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;String that defines the name of the service to build.&lt;/li&gt;
&lt;li&gt;This field is mandatory.&lt;/li&gt;
&lt;li&gt;This field cannot be null or empty.&lt;/li&gt;
&lt;li&gt;The value of this field must be 50 characters maximum.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;subnet&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;String that defines the name of a network to add to this service.&lt;/li&gt;
&lt;li&gt;It must follow CIDR notation as described at: &lt;a href=&#34;https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing&#34;&gt;https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;This field is mandatory.&lt;/li&gt;
&lt;li&gt;This field cannot be null or empty.&lt;/li&gt;
&lt;li&gt;This field must be unique for this user &amp;amp; all the networks on the manifest.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;dns&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Array of IPs to use as dns servers on this service&lt;/li&gt;
&lt;li&gt;It must follow CIDR notation as described at: &lt;a href=&#34;https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing&#34;&gt;https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;This field is optional.&lt;/li&gt;
&lt;li&gt;This field can be empty and it will default to [&amp;laquo;8.8.8.8&amp;raquo;, &amp;laquo;4.4.4.4&amp;raquo;].&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;port_forwarding&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;A port forward is something that converts translates a request on a port from one IP to another on a different network. Only tcp port forwarding is supported.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;from_port&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Source port numbers&lt;/li&gt;
&lt;li&gt;Values can be:  an string ( valid port number, 1 - 65535 ) or any&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;destination&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;String the destination of the IPv4 Address to translate to&lt;/li&gt;
&lt;li&gt;Values can be: IPv4&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;to_port&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Destination port numbers&lt;/li&gt;
&lt;li&gt;Values can be:  an string ( valid port number, 1 - 65535 ) or any&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;source&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;String that defines the IP from the provider-specified sub-allocated list of IPs of the router.&lt;/li&gt;
&lt;li&gt;It must follow CIDR notation as described at: &lt;a href=&#34;https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing&#34;&gt;https://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;This field is optional.&lt;/li&gt;
&lt;li&gt;This field can be null or empty, in case a router is created by Ernest it will default to the created one, on the other hand this value will be used.&lt;/li&gt;
&lt;li&gt;This field must be unique for this user &amp;amp; all the networks on the manifest.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;instances&#34;&gt;Instances&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;instances:
  - name: web
    image: r3/ubuntu-1404
    cpus: 1
    memory: 1GB
    count: 1
    networks:
      name: web
      start_ip: 10.1.0.11
    provisioner:
      - exec:
        - &#39;sudo apt-get update&#39;
        - &#39;sudo apt-get install apache2 -y&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Instances support the following fields:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;name&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;String that defines the name of the instance to build.&lt;/li&gt;
&lt;li&gt;This field is mandatory.&lt;/li&gt;
&lt;li&gt;This field cannot be null or empty.&lt;/li&gt;
&lt;li&gt;This field must be unique by user &amp;amp; manifest.&lt;/li&gt;
&lt;li&gt;The value of this field must be 50 characters maximum.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;image&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;String that defines the name of an image to install on the VM.&lt;/li&gt;
&lt;li&gt;This field is mandatory.&lt;/li&gt;
&lt;li&gt;This field cannot be null or empty.&lt;/li&gt;
&lt;li&gt;This field is composed in two parts one for the “catalog” and another one for the “image” separated by a slash “/”&lt;/li&gt;
&lt;li&gt;Both “catalog” and “image” are strings and can’t be null.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;cpus&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Integer that defines how many CPUs will have the VM.&lt;/li&gt;
&lt;li&gt;This field is mandatory.&lt;/li&gt;
&lt;li&gt;This field cannot be null or empty.&lt;/li&gt;
&lt;li&gt;This field must be greater or equal than 1&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;memory&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;String that defines the name of a load balancer to add to this service.&lt;/li&gt;
&lt;li&gt;This field is mandatory.&lt;/li&gt;
&lt;li&gt;This field cannot be null or empty.&lt;/li&gt;
&lt;li&gt;This field must follow the Binary Prefix format: &lt;a href=&#34;https://en.wikipedia.org/wiki/Binary_prefix#Computer_memory&#34;&gt;https://en.wikipedia.org/wiki/Binary_prefix#Computer_memory&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The possible binary prefixes are MB, GB, TB, PB, YB&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;disks:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A list of sizes of hard disks that belongs to the VM&lt;/li&gt;
&lt;li&gt;This field can be an empty list&lt;/li&gt;
&lt;li&gt;This field is a list of strings&lt;/li&gt;
&lt;li&gt;Each element of the string must follow the Binary Prefix format: &lt;a href=&#34;https://en.wikipedia.org/wiki/Binary_prefix#Hard_disk_drives&#34;&gt;https://en.wikipedia.org/wiki/Binary_prefix#Hard_disk_drives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;The possible binary prefixes are MB, GB, TB, PB, YB&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;count&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Integer that defines the number of VM to be created.&lt;/li&gt;
&lt;li&gt;This field is mandatory.&lt;/li&gt;
&lt;li&gt;This field cannot be null or empty.&lt;/li&gt;
&lt;li&gt;This field must be greater or equal that 1&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;networks&lt;/strong&gt;
Networks is a map with two fields&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;name&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;String that defines the name of a network to attach this instance.&lt;/li&gt;
&lt;li&gt;This field is mandatory.&lt;/li&gt;
&lt;li&gt;This field cannot be null or empty.&lt;/li&gt;
&lt;li&gt;The value of this field should exist on the networks section previously specified.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;start_ip&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;String that defines the starting IP to allocate the VMs to be built.&lt;/li&gt;
&lt;li&gt;This field is mandatory.&lt;/li&gt;
&lt;li&gt;This field cannot be null or empty.&lt;/li&gt;
&lt;li&gt;This field must be a valid IP.&lt;/li&gt;
&lt;li&gt;This IP should belong to the network already defined on the instance.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;provisioner&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Array that contains provisioner types&lt;/li&gt;
&lt;li&gt;Each provisioner type will be run in the order they are specified in the document&lt;/li&gt;
&lt;li&gt;This field is optional&lt;/li&gt;
&lt;li&gt;This field can be empty&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;exec&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Array of strings, any command characters must be escaped with backslashes: (RFC7159, Section 7)&lt;/li&gt;
&lt;li&gt;Each command in the exec array is concatenated together and delimited by a semicolon.&lt;/li&gt;
&lt;li&gt;This field is optional&lt;/li&gt;
&lt;li&gt;If specified as a provisioner type, this array field must contain at least one element&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>